# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from protobuf import dlserver_pb2 as dlserver__pb2
from protobuf import example_pb2 as example__pb2


class ExamplesDLServerStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetOutputs = channel.unary_unary(
        '/dlserver.ExamplesDLServer/GetOutputs',
        request_serializer=dlserver__pb2.DLRequest.SerializeToString,
        response_deserializer=example__pb2.Example.FromString,
        )


class ExamplesDLServerServicer(object):
  """Interface exported by the server.
  """

  def GetOutputs(self, request, context):
    """A simple RPC.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ExamplesDLServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetOutputs': grpc.unary_unary_rpc_method_handler(
          servicer.GetOutputs,
          request_deserializer=dlserver__pb2.DLRequest.FromString,
          response_serializer=example__pb2.Example.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dlserver.ExamplesDLServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
